https://github.com/Financial-Times/polyfill-service/commit/66cb8764651fd3d966e3d1acaf1c2f8066635a49#diff-63f7448adaa3ac67058ef9ca01d03b42400861e718a9b9ccbef7cdfdd797d5fe
https://dencode.com/ru/cipher


from operator import itemgetter
import re

if __name__ == '__main__':
    print('PyCharm')


line2 = """обнмчшйчшенчё мса амнбчцжц вмнбыуршчуа рнбцалчцжц
обцлурчущш у бньнчуа влбшлнжуенвщую, цонбшлурчц-влбшлнжуенвщую у
цонбшлурчёю йшмше чш щцчлучнчлшсхчёю, цщншчвщую (гцбвщую)
лншлбшю рцнччёю мнэвлруэ (лрм) у чш цлмнсхчёю влбшлнжуенвщую
(цонбшяуцччёю) чшобшрснчуаю. арсазлва ешвлхз «амнбчцэ лбушмё». щ
цвчцрчёг оцлнчяушсхчёг йшмшешг швав цлчцвалва: чшчнвнчун
бшщнлчцдцгдцрёю фмшбцр оц цдтнщлшг обцлурчущш чш йчшеулнсхчёю
фмшснчуаю цл шибцмбцгцр дшйубцршчуа, цднвоненчун оцммнбыщу в
рцймфюш вус цдкнжц чшйчшенчуа (вцч) у мб. швав веулшзлва жудщуг
вбнмвлрцг щшщ жсцдшсхчцжц, лшщ у бнжуцчшсхчцжц вмнбыуршчуа
рнбцалчёю обцлурчущцр, гцжфл обугнчалхва рц рвню румшю рцэч у
щцчъсущлцр (щшщ амнбчёю, лшщ у цдёечёю). швав угнзлва р вцвлшрн ррв
бцввуу, вьш у щулша.р вьш цвчцрф швав вцвлшрсазл лаынсён
(влбшлнжуенвщун) дцгдшбмубцркущу (лд, вг. лаынсёэ дцгдшбмубцркущ) р-52ч
у р-2ш, врнмнччён р 5 шрушщбёсхнр р вцвлшрн 8-э у 12-э рцймфьчёю шбгуэ,
щцлцбён шмгучувлбшлурчц оцмеучнчё дцнрцгф шрушяуцччцгф
щцгшчмцршчуз ррв вьш. чш рццбфынчуу лд чшюцмалва щбёсшлён бшщнлё
(вг. щбёсшлша бшщнлш) рцймфьчцжц дшйубцршчуа (щбрд) дцсхьцэ
мшс чцвлу (р амнбчцг у чнамнбчцг цвчшкнчуу) у шрушдцгдё. р фвсцруаю ��
губчцжц рбнгнчу дцнрцн мныфбвлрц влбшлнжуенвщцэ дцгдшбмубцрцечцэ
шрушяунэ (вдш) вьш чн цвфкнвлрсанлва. в янсхз оцммнбышчуа
обшщлуенвщую чшрёщцр снлчцжц вцвлшрш цбжшчуйфзлва оцснлё оц осшчшг
дцнрцэ оцмжцлцрщу. р фжбцышнгёэ онбуцм бшйрулуа рцнччц-оцсулуенвщцэ
цдвлшчцрщу усу р щбуйувчёю вулфшяуаю вдш онбнмшнлва р цонбшлурчцн
оцмеучнчун цдтнмучнччцгф влбшлнжуенвщцгф щцгшчмцршчуз рццбфынччёю
вус (рв) вьш усу щцгшчмфзкнгф цдтнмучнччцжц щцгшчмцршчуа чш лрм.
цвчцрчён чшобшрснчуа бшйрулуа вав рв вьш: гцмнбчуйшяуа у обцмснчун ��
вбцщш ищвосфшлшяуу лд р-52ч у р-2ш; обучалун чш рццбфынчун чцрёю
луоцр рёвцщцлцечёю щбрд, шрушдцгд у лд чцрцжц оцщцснчуа щ 2040 ж."""

line = """шцагщг иахшцкихпг м агюбцгэ ы бюпгшцх гцбэщбу фщъайъцхмх
ы мбщжъ 1940-е йй. иах гмцхыщбэ клгшцхх клъщче, хээхйахабыгытхе хё
йъаэгщхх. ш шгэбйб щглгпг акмбыбьшцыб гайъщцхщч шцаъэхпбшо ьбюхцошд
ы дьъащбу бюпгшцх эгмшхэгпощбу щъёгыхшхэбшцх, иах мбцбабу ыбёэбрщб
бьщбыаъэъщщбъ агёыхцхъ гцбэщбу фщъайъцхмх х щгклщб-цъещхлъшмбйб
ибцъщжхгпг ы бюпгшцх дьъащбйб цбипхыщбйб жхмпг (дцж), ьбпйбъ ыаъэд
бшцгыпдд бцмачцчэ ыбиабш ъйб хшибпоёбыгщхд ы ыбъщщче жъпде.ы 1953 й.
ы гайъщцхщъ щглгпхшо агюбцч иб иабэчтпъщщбу ьбючлъ кагщг. ёг 1958–1972
йй. ючпх ыыъьъщч ы фмшипкгцгжхн лъцчаъ хшшпъьбыгцъпошмхе аъгмцбаг,
бьхщ хё мбцбаче ючп хэибацхабыгщ хё штг, бшцгпощчъ шмбщшцакхабыгщч х
ибшцабъщч шбюшцыъщщчэх шхпгэх. ы 1969 й. ы фшъушъ, ы 40 мэ бц
шцбпхжч гайъщцхщч юкфщбш-гуаъшг, ючпг икяъщг пгюбагцбащгд
кшцгщбымг иб агьхбехэхлъшмбу иъаъагюбцмъ бюпклъщщбйб дьъащбйб
цбипхыг (бдц), щб ы 1973 й. ибшпъ ычьъпъщхд бм. 1 мй ипкцбщхд бщг ючпг
ьъэбщцхабыгщг. ы 1974 й. ы пхэъ, ы 100 мэ м шъыъак бц юкфщбш-гуаъшг,
ючпг икяъщг иъаыгд гцбэщгд фпъмцабшцгщжхд (гфш) «гцклг-1»,
ибшцабъщщгд иах ибэбях щъэъжмбу мбэигщхх «шхэъщш». гфш ючпг шбёьгщг
щг бшщбыъ цдръпбыбьщ йб аъгмцбаг щг иахабьщбэ кагщъ фпъмцахлъшмбу ��
эбящбшцон 357 эыц."""

line4 = """блюншж явфвн, бйёпнёж яиэбёйёнляёф! оплизкриоь о еэбэфвж,
злабэ кэ яштлбв квжнлккэь овпщ блидкэ яшбэяэпщ кв плищзл зиэоо
(зиэооёсёзэуёь) ё кв мнлопл фёоил (нванвооёь). кэ яштлбв крдкл ялеянэцэпщ x,
y, width, height ё зиэоо люкэнрдвкклал кэ зэнпёкзв лючвзпэ (ёиё зллнбёкэпш
плфвз злкпрнля ъплал лючвзпэ, э-иь овайвкпэуёь)."""

# alph = 'оеаинтсрвлкмдпуяыьгзбчйхжшюцщэфёъ'
# alph = 'оианевстркядмылбпхгучзиьжшюцчъэфё'
alph = 'оаниетрсвлмкпгыбяудйчэцхзьщшжюфъё'
# alph = 'абвгдеёжзийклмнопрстуфхцчшщъыьэюя'


map = dict()

#create locale-frequency alphabet dict
for i in line:
    if re.match(r'[а-яёА-ЯЁ]', i):
        if map.get(i) is not None:
            map[i] += 1
        else:
            map[i] = 0

#sorted by inrcrease frequency
var = sorted(map.items(), key = itemgetter(1), reverse=True)
print(var)

#==================TASK 1=================
# subalph = 'где_жзийклмнопрсту_х_ч_щъыьээяабв'
#
# sortedalph = dict(zip(alph, subalph))
#
# print(sortedalph)


sortedalph = dict()
#create matching dict (global - local)
for i in range(len(var)):
    sortedalph[var[i][0]] = alph[i]

print(sortedalph)

decryptedline = ''
#decrypting
for i in line:

    if i in map.keys():
        decryptedline += sortedalph[i]
    else:
        decryptedline += i

print(decryptedline)

#print(map.items())

#sortedmap = dict(var)
#print(map)
